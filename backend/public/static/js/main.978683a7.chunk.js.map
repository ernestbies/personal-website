{"version":3,"sources":["utils/information.js","parts/navbar/Navbar.js","parts/footer/Footer.js","pages/about/About.js","utils/projects.js","components/HobbyItem.js","components/ProjectItem.js","utils/functions/renderElements.js","pages/projects/Projects.js","utils/skills.js","utils/knowledge.js","components/KnowledgeCard.js","pages/skills/Skills.js","utils/hobby.js","components/MyTimeline.js","pages/hobby/Hobby.js","utils/contact.js","components/ConfirmAlert.js","components/ContactForm.js","pages/contact/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["WEBSITE_NAME","info","name","surname","country","languages","degree","dateOfBirth","text","achievements","Navbar","scrollSpy","React","useRef","useEffect","window","addEventListener","changeNavbar","scrollTo","id","document","getElementById","offsetTop","navbarContent","getElementsByClassName","websiteName","bars","current","valueOf","state","inViewState","style","color","backgroundColor","navbarLinks","Array","prototype","slice","call","map","navLink","className","bar","onClick","ref","offset","items","currentClassName","hamburgerMenu","navMenu","classList","toggle","toggleMobileMenu","marginTop","marginBottom","Footer","margin","About","width","height","backgroundImage","flex","Avatar","src","el","fontSize","padding","marginLeft","paddingLeft","fontWeight","display","maxWidth","alignItems","marginRight","borderBottomWidth","borderBottomStyle","paddingBottom","borderColor","birthDate","Math","floor","Date","getTime","alt","borderRadius","projects","description","technologies","mobile","server","database","os","image","links","github","youtube","desktop","additionalData","link","documentation","bitbucket","HobbyItem","quote","keywords","textAlign","fontFamily","fontStyle","paddingTop","wordBreak","includes","size","e","toUpperCase","ProjectItem","renderTechnologies","len","length","i","borderLeftWidth","borderLeftStyle","borderLeftColor","view","numOfTechnologies","Object","keys","push","technology","charAt","renderTechnologiesBlock","renderLanguages","textDecoration","href","renderElements","elements","type","Carousel","Item","border","infoSize","Projects","skills","knowledge","frontend","technology_stack","backend","databases","testing","KnowledgeCard","useState","item","flexDirection","background","borderTopLeftRadius","borderTopRightRadius","position","left","right","bottom","join","borderBottomLeftRadius","borderBottomRightRadius","target","rel","justifyContent","Skills","flexWrap","filter","hobby","useStyles","makeStyles","theme","paper","secondaryTail","palette","secondary","main","MyTimeline","classes","Timeline","align","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","Typography","Hobby","contact","email","discord","ConfirmAlert","showAlert","setShowAlert","variant","Alert","onClose","dismissible","ContactForm","str","recaptchaRef","createRef","setEmail","topic","setTopic","setText","alertVariant","setAlertVariant","recaptcha","setRecaptchaValue","sendData","data","fetch","method","headers","body","JSON","stringify","clearData","value","order","placeholder","onChange","event","required","pattern","sitekey","process","RECAPTCHA_SITE_KEY","hl","disabled","match","form","then","res","ok","catch","reset","Contact","outline","input","createElement","appendChild","select","execCommand","remove","innerHTML","copyName","onMouseOut","borderWidth","cursor","App","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.978683a7.chunk.js","sourcesContent":["export const WEBSITE_NAME = 'ernestbies.com';\r\n\r\nexport const info = {\r\n    name: 'Ernest',\r\n    surname: 'Bieś',\r\n    country: 'Poland',\r\n    languages: ['PL', 'GB', 'DE'],\r\n    degree: 'Bachelor\\'s in Computer Science',\r\n    dateOfBirth: '1998-03-25',\r\n    text: 'Hi! My name is Ernest and I come from Poland. I am a graduate of the State Higher Vocational School in Tarnów in the field of Computer Science (with a grade of 5.0 on the diploma). From an early age, I was interested in many things related to Information Technology. In my youth, I ran on-line gaming servers that were popular all over the country. I was also a moderator and mentor at the largest forum in Poland at that time - MPCforum about technical innovations, games and programming scripts and plugins for on-line game servers. I constantly develop my skills and expand my knowledge. I learn fast, I am communicative and ready to work in a team. I am a kind, reliable and helpful person. In addition to Computer Science, I am interested in many other things, mainly e-sports and cinematography. Take a look at my website to get to know me better.',\r\n    achievements: ['aspiring developer', 'owner of multiple game servers', 'ex-moderator at the largest game servers forum']\r\n};\r\n\r\nexport const calculateAge = birthDate => Math.floor((new Date() - new Date(birthDate).getTime()) / 3.15576e+10);\r\n","import React, {useEffect} from 'react';\r\nimport Scrollspy from 'react-scrollspy'\r\nimport \"./Navbar.styles.css\";\r\nimport {WEBSITE_NAME} from \"../../utils/information\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const scrollSpy = React.useRef();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeNavbar);\r\n    }, []);\r\n\r\n    const scrollTo = (id) => window.scrollTo(0, document.getElementById(id).offsetTop);\r\n\r\n    const toggleMobileMenu = () => {\r\n        const hamburgerMenu = document.getElementById('hamburger');\r\n        const navMenu = document.getElementsByClassName('navMenu')[0];\r\n        const navbarContent = document.getElementsByClassName('navbarContent')[0];\r\n        hamburgerMenu.classList.toggle('active');\r\n        navMenu.classList.toggle('active');\r\n        navbarContent.classList.toggle('active');\r\n    }\r\n\r\n    const changeNavbar = () => {\r\n        const navbarContent = document.getElementsByClassName('navbarContent')[0];\r\n        const websiteName = document.getElementById('websiteName');\r\n        const bars = document.getElementsByClassName('bar');\r\n\r\n        if (scrollSpy.current.valueOf().state.inViewState[4]) {\r\n            websiteName.style.color = '#9932CC'\r\n            navbarContent.style.backgroundColor = 'white';\r\n            const navbarLinks = document.getElementsByClassName('navbarLink');\r\n            Array.prototype.slice.call(navbarLinks).slice(0, 4).map(navLink => navLink.className = 'navbarLinkSecondTheme');\r\n            Array.prototype.slice.call(bars).map(bar => bar.style.backgroundColor = '#9932CC');\r\n        } else {\r\n            websiteName.style.color = 'orange'\r\n            navbarContent.style.backgroundColor = 'black';\r\n            const navbarLinks = document.getElementsByClassName('navbarLinkSecondTheme');\r\n            Array.prototype.slice.call(navbarLinks).map(navLink => navLink.className = 'navbarLink');\r\n            Array.prototype.slice.call(bars).map(bar => bar.style.backgroundColor = 'orange');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className={'navbarContent'}>\r\n            <div id={'websiteName'} onClick={() => window.scrollTo(0, 0)} className={'websiteName'}>{WEBSITE_NAME}</div>\r\n            <Scrollspy className={'navMenu'}\r\n                       ref={scrollSpy}\r\n                       offset={-10}\r\n                       items={['about', 'projects', 'skills', 'hobby', 'contact']}\r\n                       currentClassName={'navbarLinkCurrent'}\r\n            >\r\n                <div onClick={() => scrollTo('about')} className={'navbarLink'}>{'About'}</div>\r\n                <div onClick={() => scrollTo('projects')} className={'navbarLink'}>{'Projects'}</div>\r\n                <div onClick={() => scrollTo('skills')} className={'navbarLink'}>{'Skills'}</div>\r\n                <div onClick={() => scrollTo('hobby')} className={'navbarLink'}>{'Hobby'}</div>\r\n                <div onClick={() => scrollTo('contact')} id={'contactLink'} className={'navbarLink'}>{'Contact'}</div>\r\n            </Scrollspy>\r\n            <div id={'hamburger'} className={'hamburger'} onClick={() => toggleMobileMenu()}>\r\n                <span className={'bar'}/>\r\n                <span className={'bar'} style={{marginTop: 5, marginBottom: 5}}/>\r\n                <span className={'bar'}/>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport \"./Footer.styles.css\";\r\nimport {WEBSITE_NAME} from \"../../utils/information\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={'footer'}>\r\n            <p style={{color: 'white', margin: 0}}>&copy; {WEBSITE_NAME} 2021. All rights reserved.</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {Avatar} from '@material-ui/core';\r\nimport {info, calculateAge} from \"../../utils/information\";\r\nimport './About.styles.css';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <div id={'about'} className={'item-dashboard about-container row'}\r\n             style={{width: '100%', height: '100%', margin: 0, backgroundImage: 'url(images/wallpaper1.jpg)'}}>\r\n            <div className={'avatar-container col'} style={{flex: 2}}>\r\n                <Avatar style={{marginTop: 15, marginBottom: 15, width: 200, height: 200}}\r\n                        src={'images/me.jpg'}/>\r\n                {\r\n                    info.achievements.map(el =>\r\n                        <code key={el} style={{fontSize: 12}}>\r\n                            <span style={{color: 'orange'}}>{'//'}</span> {el}\r\n                        </code>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={'text-container col'} style={{flex: 5, padding: 0}}>\r\n                <div className={'name-bar'}>\r\n                    <div style={{width: 5, height: 30, marginLeft: 20, backgroundColor: 'orange'}}/>\r\n                    <p style={{\r\n                        paddingLeft: 7,\r\n                        fontWeight: 300,\r\n                        fontSize: 30,\r\n                        margin: 0,\r\n                    }}>{info.name + ' ' + info.surname}</p>\r\n                </div>\r\n                <div style={{\r\n                    display: 'inline-flex',\r\n                    maxWidth: 365,\r\n                    alignItems: 'center',\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                    marginTop: 10,\r\n                    borderBottomWidth: 1,\r\n                    borderBottomStyle: 'solid',\r\n                    paddingBottom: 10,\r\n                    borderColor: 'orange'\r\n                }}>\r\n                    <p className={'info-style'}>{calculateAge(info.dateOfBirth)}</p>\r\n                    <div className={'info-bar'}/>\r\n                    <p className={'info-style'}>{info.degree}</p>\r\n                    <div className={'info-bar'}/>\r\n                    <p className={'info-style'}>{info.country}</p>\r\n                    <div className={'info-bar'}/>\r\n                    {\r\n                        info.languages.map((el) => {\r\n                            return (\r\n                                <img\r\n                                    key={el}\r\n                                    alt={el}\r\n                                    width={20}\r\n                                    height={12}\r\n                                    style={{marginRight: 5, width: 16, height: 14, borderRadius: '50%'}}\r\n                                    src={'https://purecatamphetamine.github.io/country-flag-icons/1x1/' + el + '.svg'}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <p className={'info-text'}>{info.text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","export const projects = [\r\n    {\r\n        id: 0,\r\n        name: 'Media Browser',\r\n        description: 'System for searching information about audiovisual materials. Project implemented as part of an engineering thesis. The application allows you to search and view information about movies, series and people related to the film industry. The application is designed for devices with Android and iOS. The application supports Polish and English.',\r\n        technologies: {\r\n            mobile: ['JavaScript', 'React Native', 'React Native Navigation', 'React Native SVG', 'MobX', 'SQLite'],\r\n            server: ['JavaScript', 'Node.js', 'Hapi.js', 'lodash', 'JSON Web Token', 'bcrpyt', 'Nodemailer'],\r\n            database: ['MongoDB', 'mongoose']\r\n        },\r\n        os: ['Windows', 'Linux', 'Android', 'iOS'],\r\n        color: 'orange',\r\n        languages: ['PL', 'US'],\r\n        image: 'images/projects/mediabrowser-dashboard.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/MediaBrowser-mobile',\r\n            youtube: 'https://youtu.be/7r1r9JiKsYc'\r\n        }\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Camera Fingerprint PRNU',\r\n        description: 'Camera Fingerprint PRNU (Autopsy module) uses photo response non-uniformity of camera sensor (PRNU) to check if a photo was truly taken by a suspected camera or not. Module is not based on metadata such as EXIF, performs a physical analysis of the camera sensor, determines photo response non-uniformity (PRNU). The project was presented at the 2020 Open Source Digital Forensics Conference (#OSDFCon) and placed on the organizer\\'s home page.',\r\n        technologies: {\r\n            desktop: ['Autopsy (ver. 4.15.0)', 'Apache Netbeans IDE (ver. 9.0)', 'Python (ver. 3.6.0)']\r\n        },\r\n        os: ['Windows'],\r\n        color: '#282c34',\r\n        additionalData: {\r\n            name: 'OSDF',\r\n            image: 'images/projects/osdfcon.png',\r\n            link: 'https://www.osdfcon.org/2020-event/2020-module-development-contest/',\r\n            text: 'Presented at conference'\r\n        },\r\n        image: 'images/projects/camerafingerprint.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/Camera-Fingerprint-PRNU',\r\n            youtube: 'https://www.youtube.com/watch?v=lsoqVuuq9T0'\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Spaceships',\r\n        description: 'Spaceships is a puzzle game combining two popular games \"Ships\" and \"Minesweeper\" based on a client-server architecture. The aim of the game is to find all the ships on the board in the fewest possible steps.',\r\n        technologies: {\r\n            desktop: ['Java', 'C++', 'Apache Netbeans IDE', 'Swing', 'Qt'],\r\n            mobile: ['Java', 'Android Studio'],\r\n            server: ['Java', 'Spring', 'C++', 'Qt', 'Postman'],\r\n            database: ['PostgreSQL', 'Java Persistence API'],\r\n            documentation: ['Microsoft Word', 'Libre Office', 'LaTeX', 'Unified Modeling Language (UML)']\r\n        },\r\n        os: ['Windows', 'Android'],\r\n        color: 'purple',\r\n        image: 'images/projects/spaceships.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/SpaceShips'\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'ApocalyptoGame',\r\n        description: '\"ApocalyptoGame\" is a first-person shooter (FPS) game. In the game, we play the role of a soldier set in a post-apocalyptic world. The player\\'s task is to destroy the enemy ship. The player has the ability to interact with the environment, can pick up items. In order to destroy a ship, the player must collect four cells that will help him power the generator. The way to get cells is different - some of them are located on the map, some of them can be obtained by the player by killing aliens, and the last one is possible after killing the boss. After collecting all the cells, the player can power the generator on the map, which will blow up the enemy ship. The game has a developed combat and healing system.',\r\n        technologies: {\r\n            desktop: ['C#', 'Unity']\r\n        },\r\n        os: ['Windows'],\r\n        color: 'red',\r\n        image: 'images/projects/apocalyptogame.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/ApocalyptoGame'\r\n        }\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Quiz app',\r\n        description: 'Mobile application that allows you to solve on-line tests. Tests are downloaded from an external server. The user has the option of solving a specific test, has a specific time to answer a specific question. In addition, user can choose a random test and view results. The application has a drawer menu that makes it easy to access all screens. The application is designed for Android and iOS.',\r\n        technologies: {\r\n            mobile: ['JavaScript', 'React Native', 'RN Navigation', 'Async Storage', 'NetInfo', 'Vector icons', 'SQLite']\r\n        },\r\n        image: 'images/projects/quiz-dashboard.png',\r\n        os: ['Android', 'iOS'],\r\n        color: 'yellow',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/Quiz'\r\n        }\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Image binarizer',\r\n        description: 'The application allows you to binarize images. The application supports the basic types of binarization - low-level, high-level, two-threshold, conditional. It allows you to load any image (color or black and white), and then select a specific operation. The application works in a distributed environment using Remote Method Invocation (RMI) - a mechanism that enables remote methods of objects invocation. These objects can reside in other Java virtual machines that can be on other computers. In RMI technology, it is necessary to run three processes: client, server and register of objects.',\r\n        technologies: {\r\n            desktop: ['Java', 'Apache NetBeans IDE', 'Swing', 'Remote Method Invocation (RMI)']\r\n        },\r\n        image: 'images/projects/imagebinarizer.png',\r\n        os: ['Windows'],\r\n        color: 'grey',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/ImageBinarizer'\r\n        }\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Calculator',\r\n        description: 'App \"Calculator\" was created using the React Native framework. It was my first app created in React Native. The application works in landscape and potrait modes. The application has a basic set of math functions such as addition, subtraction, multiplication, division, percent. After changing the orientation, additional options are available.',\r\n        technologies: {\r\n            mobile: ['JavaScript', 'React Native']\r\n        },\r\n        os: ['Android', 'iOS'],\r\n        color: 'blue',\r\n        image: 'images/projects/calculator-dashboard.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/CalculatorRN'\r\n        }\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Database Connection App',\r\n        description: 'The application allows you to connect to any PostgreSQL database using the JDBC engine. The login data can be saved and read because the application uses serialization. In the application, it is possible to view all tables in the database. If the table contains users\\' contact details (e-mail address), it is possible to send a message. Sending e-mails is performed by Javax Mail. User can add recipients (TO, CC, BCC), message subject and content. After approval, the e-mail is sent to the selected users.',\r\n        technologies: {\r\n            desktop: ['Java', 'Apache NetBeans IDE', 'Swing', 'JDBC', 'PostgreSQL', 'Javax Mail']\r\n        },\r\n        os: ['Windows'],\r\n        color: '#1E90FF',\r\n        image: 'images/projects/databaseApp.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/databaseApp'\r\n        }\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Database Analyzer',\r\n        description: 'Application for analyzing database performance while using VIEW, MATERIALIZED VIEW, WITH and TEMPORARY TABLE. The application allows you to connect to any PostgreSQL database using the JDBC engine. The login data can be saved and read because the application uses serialization.',\r\n        technologies: {\r\n            desktop: ['Java', 'Apache NetBeans IDE', 'Swing', 'JDBC', 'PostgreSQL']\r\n        },\r\n        os: ['Windows'],\r\n        color: '#00008B',\r\n        image: 'images/projects/databaseAnalyzer.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/databaseAnalyzer'\r\n        }\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Task planner',\r\n        description: 'My first school project in Angular. Task Planner covers the basics of Angular. The application includes data binding, the basic appearance of pages using HTML and CSS, forms, tables, dialogs, downloading data using the HTTP protocol from an external server and others.',\r\n        technologies: {\r\n            desktop: ['Angular', 'TypeScript', 'HTML', 'CSS']\r\n        },\r\n        os: ['Windows'],\r\n        color: '#DC143C',\r\n        image: 'images/projects/taskplanner.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/task_planner'\r\n        }\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Chess server',\r\n        description: 'An academic project that checks the correctness of moves on a chess board using unit tests. The project uses the Java programming language, the Spring platform and the JUnit library, which allows you to carry out tests.',\r\n        technologies: {\r\n            desktop: ['Java', 'Spring Framework', 'JUnit', 'IntelliJ IDEA']\r\n        },\r\n        os: ['Windows'],\r\n        color: 'red',\r\n        image: 'images/projects/chess-server.png',\r\n        links: {\r\n            bitbucket: 'https://bitbucket.org/ernestbies/tijo-11'\r\n        }\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Bank App',\r\n        description: 'An academic project that validates sample basic banking operations using unit tests. The project uses the Java programming language and tests carried out with the Spock library and the Groovy programming language. The basic things related to functional programming were also used, such as streams, maps and filters.',\r\n        technologies: {\r\n            desktop: ['Java', 'Groovy', 'Spock', 'IntelliJ IDEA']\r\n        },\r\n        os: ['Windows'],\r\n        color: 'green',\r\n        image: 'images/projects/bank-app.png',\r\n        links: {\r\n            bitbucket: 'https://bitbucket.org/ernestbies/tijo-12'\r\n        }\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Pizzeria database',\r\n        description: 'Pizzeria database created with Toad Data Modeler. Basic SQL components (functions, triggers, etc.) have been implemented in the project. The main goal of the project was to create a database for a pizzeria that allows the customer to place orders for the selected type of pizza along with extras, as well as after agreeing to register in the pizzeria database, getting appropriate discounts. Placing an order is possible via the Internet, by phone or in person. After confirming the payment, the preparation of the pizza is transferred for implementation. When ordering via the Internet or by phone, the customer makes payment by the pizza delivery man.',\r\n        technologies: {\r\n            desktop: ['Toad Data Modeler', 'SQL', 'PostgreSQL']\r\n        },\r\n        os: ['Windows'],\r\n        color: 'green',\r\n        image: 'images/projects/pizzeria-database.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/pizzeria-database'\r\n        }\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Car service station',\r\n        description: 'Project implemented as part of POWER Project (Projekt Współpraca Synergia Zarządzanie w Tarnowie). The subject of the project was to describe and model processes using Business Process Modeling Notation (BPMN) showing the operation of car service station. A detailed course of the repair process of the damaged vehicle will be presented in this project, starting from delivering damaged car for repair to handing over the vehicle. A description of the car engine repair, spare parts ordering, car handover and payment process is presented. The main goal of the project is to present the processes that work in most car service stations.',\r\n        technologies: {\r\n            desktop: ['Signavio Process Manager - Academic', 'Business Process Model and Notation (BPMN)']\r\n        },\r\n        os: ['Windows'],\r\n        color: '#D51A1A',\r\n        image: 'images/projects/car_service_station.png',\r\n        links: {\r\n            github: 'https://github.com/ernestbies/Car-service-station-BPMN'\r\n        }\r\n    }\r\n]\r\n","import React from \"react\";\r\nimport {BsMusicNoteBeamed, FaLaptopCode, IoGameController, IoTvOutline} from \"react-icons/all\";\r\n\r\nconst HobbyItem = ({id, image, quote, name, text, color, keywords}) => {\r\n    return (\r\n        <div className={'carousel-hobby-item'} key={id}>\r\n            <img\r\n                alt={name}\r\n                src={image}\r\n                className={'carousel-hobby-img'}\r\n            />\r\n            <div className={'carousel-content'}>\r\n                <div style={{display: 'flex', textAlign: 'center', alignItems: 'center'}}>\r\n                    <div style={{width: 5, height: 30, backgroundColor: color}}/>\r\n                    <p style={{paddingLeft: 7, fontFamily: 'Open Sans', margin: 0}}>{name}</p>\r\n                </div>\r\n                <p style={{\r\n                    fontSize: 14,\r\n                    fontFamily: 'Open Sans',\r\n                    fontStyle: 'italic',\r\n                    paddingTop: 10\r\n                }}>{quote}</p>\r\n                <p style={{\r\n                    fontSize: 12,\r\n                    fontFamily: 'Open Sans',\r\n                    marginTop: 20,\r\n                    maxWidth: 500,\r\n                    wordBreak: 'break-word'\r\n                }}>{text}</p>\r\n                <div>\r\n                    {\r\n                        name.includes('Program') ? <FaLaptopCode size={20} color={color} style={{marginRight: 10}}/> :\r\n                            name.includes('Esports') ? <IoGameController size={20} color={color} style={{marginRight: 10}}/> :\r\n                                name.includes('Music') ? <BsMusicNoteBeamed size={20} color={color} style={{marginRight: 10}}/> :\r\n                                    name.includes('Cinema') ? <IoTvOutline size={20} color={color} style={{marginRight: 10}}/> : <div/>\r\n                    }\r\n                    <span style={{fontFamily: 'Press Start', fontSize: 8}}>{keywords.map(e => e.toUpperCase() + '. ')}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HobbyItem;\r\n","import {\r\n    AiFillInfoCircle,\r\n    AiFillWindows, FaBitbucket,\r\n    FaGithub,\r\n    FaWrench,\r\n    FaYoutube,\r\n    FcAndroidOs,\r\n    FcLinux,\r\n    IoLogoApple\r\n} from \"react-icons/all\";\r\nimport React from \"react\";\r\n\r\nconst ProjectItem = ({id, image, color, name, description, technologies, os, languages, links, additionalData}) => {\r\n\r\n    const renderTechnologies = (technologies) => {\r\n        const len = technologies.length;\r\n        return technologies.map((el, i) => {\r\n            if (len === i + 1) {\r\n                return el;\r\n            } else {\r\n                return <span key={el}>{el} <span style={{color: '#A9A9A9'}}> | </span></span>;\r\n            }\r\n        });\r\n    };\r\n\r\n    const renderTechnologiesBlock = (technologies) => {\r\n        let view = [];\r\n        let numOfTechnologies = Object.keys(technologies).length;\r\n\r\n        if (numOfTechnologies === 1) {\r\n            view.push(\r\n                <code key={numOfTechnologies} style={{\r\n                    fontSize: 12,\r\n                    fontStyle: 'normal',\r\n                }}>{renderTechnologies(technologies[Object.keys(technologies)])}</code>\r\n            )\r\n        } else {\r\n            Object.keys(technologies).map((technology) =>\r\n                view.push(\r\n                    <p key={technology} style={{\r\n                        fontSize: 12,\r\n                        fontFamily: 'Open Sans',\r\n                        marginBottom: 5\r\n                    }}>{technology.charAt(0).toUpperCase() + technology.slice(1) + ':'} <code style={{\r\n                        fontSize: 12,\r\n                        fontStyle: 'normal',\r\n                    }}>{renderTechnologies(technologies[technology])}</code></p>\r\n                )\r\n            )\r\n        }\r\n\r\n        return view;\r\n    };\r\n\r\n    const renderLanguages = (languages) => {\r\n        let view = [];\r\n        languages.map((country) => view.push(\r\n            <img\r\n                key={country}\r\n                style={{marginRight: 3}}\r\n                width={20}\r\n                height={12}\r\n                alt={country}\r\n                src={'https://purecatamphetamine.github.io/country-flag-icons/1x1/' + country + '.svg'}\r\n            />\r\n        ))\r\n\r\n        return view;\r\n    };\r\n\r\n    return (\r\n        <div className={'carousel-project-item'} key={id}>\r\n            <img\r\n                alt={name}\r\n                src={image}\r\n                className={'carousel-project-img'}\r\n            />\r\n            <div className={'carousel-content'}>\r\n                <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <p style={{\r\n                        borderLeftWidth: 5,\r\n                        borderLeftStyle: 'solid',\r\n                        borderLeftColor: color,\r\n                        paddingLeft: 7,\r\n                        fontFamily: 'Open Sans',\r\n                        margin: 0\r\n                    }}>{name}</p>\r\n                </div>\r\n                <p style={{\r\n                    fontSize: 12,\r\n                    fontFamily: 'Open Sans',\r\n                    marginTop: 30,\r\n                }}>{description}</p>\r\n                <div style={{display: 'flex', marginTop: 30, marginBottom: 10, alignItems: 'center'}}>\r\n                    <FaWrench color={color} size={14} style={{marginRight: 5}}/>\r\n                    <p style={{\r\n                        fontSize: 14,\r\n                        fontFamily: 'Open Sans',\r\n                        margin: 0\r\n                    }}>{'Technologies used in project'}</p>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        renderTechnologiesBlock(technologies)\r\n                    }\r\n                </div>\r\n\r\n                <div style={{display: 'flex', marginTop: 30, alignItems: 'center'}}>\r\n                    <AiFillInfoCircle color={color} size={14} style={{marginRight: 5}}/>\r\n                    <p style={{\r\n                        fontSize: 14,\r\n                        fontFamily: 'Open Sans',\r\n                        margin: 0\r\n                    }}>{'Technical information'}</p>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        os.includes('Windows') && <AiFillWindows size={20} style={{marginRight: 3}}/>\r\n                    }\r\n                    {\r\n                        os.includes('Linux') && <FcLinux size={20} style={{marginRight: 3}}/>\r\n                    }\r\n                    {\r\n                        os.includes('Android') && <FcAndroidOs size={20} style={{marginRight: 3}}/>\r\n                    }\r\n                    {\r\n                        os.includes('iOS') && <IoLogoApple size={20} style={{marginRight: 3}}/>\r\n                    }\r\n                    {\r\n                        languages &&\r\n                        <div style={{\r\n                            width: 1,\r\n                            height: 15,\r\n                            backgroundColor: '#282c34',\r\n                            marginLeft: 5,\r\n                            marginRight: 8,\r\n                            display: 'inline-block',\r\n                        }}/>\r\n                    }\r\n                    {\r\n                        languages && renderLanguages(languages)\r\n                    }\r\n                    {\r\n                        additionalData &&\r\n                        <div style={{\r\n                            width: 1,\r\n                            height: 15,\r\n                            backgroundColor: '#282c34',\r\n                            marginLeft: 5,\r\n                            marginRight: 8,\r\n                            display: 'inline-block',\r\n                        }}/>\r\n                    }\r\n                    {\r\n                        additionalData &&\r\n                        <a style={{\r\n                            display: 'inline',\r\n                            textDecoration: 'none',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            marginRight: 3\r\n                        }}\r\n                           href={additionalData.link}>\r\n                            <img\r\n                                width={65}\r\n                                height={16}\r\n                                alt={additionalData.name}\r\n                                src={additionalData.image}/>\r\n                            <p style={{\r\n                                fontSize: 10,\r\n                                margin: 0,\r\n                                color: 'white',\r\n                                display: 'inline'\r\n                            }}>{additionalData.text}</p>\r\n                        </a>\r\n                    }\r\n                    <div style={{\r\n                        width: 1,\r\n                        height: 15,\r\n                        backgroundColor: '#282c34',\r\n                        marginLeft: 5,\r\n                        marginRight: 8,\r\n                        display: 'inline-block',\r\n                    }}/>\r\n                    {\r\n                        links.github &&\r\n                        <a style={{\r\n                            display: 'inline-block',\r\n                            textDecoration: 'none',\r\n                            textAlign: 'center',\r\n                        }} href={links.github}>\r\n                            <FaGithub color={'white'} size={20} style={{marginRight: 5}}/>\r\n                            <p style={{fontSize: 10, marginRight: 5, color: 'white', display: 'inline'}}>\r\n                                Check out project page</p>\r\n                        </a>\r\n                    }\r\n                    {\r\n                        links.bitbucket &&\r\n                        <a style={{\r\n                            display: 'inline-block',\r\n                            textDecoration: 'none',\r\n                            textAlign: 'center',\r\n                        }} href={links.bitbucket}>\r\n                            <FaBitbucket size={20} style={{marginRight: 5}}/>\r\n                            <p style={{fontSize: 10, marginRight: 5, color: 'white', display: 'inline'}}>\r\n                                Check out project page</p>\r\n                        </a>\r\n                    }\r\n                    {\r\n                        links.youtube &&\r\n                        <a style={{\r\n                            display: 'inline-block',\r\n                            textDecoration: 'none',\r\n                            textAlign: 'center'\r\n                        }}\r\n                           href={links.youtube}>\r\n                            <FaYoutube color={'red'} size={20} style={{marginRight: 5}}/>\r\n                            <p style={{fontSize: 10, margin: 0, color: 'white', display: 'inline'}}>\r\n                                Check out the presentation video</p>\r\n                        </a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectItem;\r\n","import {Carousel} from 'react-bootstrap';\r\nimport HobbyItem from '../../components/HobbyItem';\r\nimport React from 'react';\r\nimport ProjectItem from '../../components/ProjectItem';\r\n\r\nexport const renderElements = (elements, type) => {\r\n    let view = [];\r\n\r\n    switch (type) {\r\n        case 'hobby':\r\n            elements.map((el) => view.push(\r\n                <Carousel.Item key={el.id}>\r\n                    <HobbyItem image={el.image} quote={el.quote} name={el.name} text={el.text} color={el.color}\r\n                               keywords={el.keywords}/>\r\n                </Carousel.Item>\r\n            ));\r\n            break;\r\n        case 'skills':\r\n            elements.map((el) => view.push(\r\n                <div key={el.id} style={{border: 0, margin: 10}} className={'tooltipClassSmall'}>\r\n                    <span className={'tooltipText'} style={{color: el.color}}>{el.name}</span>\r\n                    <img alt={el.name} src={el.image} width={45} height={45}/>\r\n                </div>\r\n            ));\r\n            break;\r\n        case 'projects':\r\n            elements.map((el) => view.push(\r\n                <Carousel.Item key={el.id}>\r\n                    <ProjectItem\r\n                        id={el.id}\r\n                        image={el.image}\r\n                        color={el.color}\r\n                        name={el.name}\r\n                        description={el.description}\r\n                        technologies={el.technologies}\r\n                        os={el.os}\r\n                        languages={el.languages}\r\n                        links={el.links}\r\n                        additionalData={el.additionalData}\r\n                        infoSize={el.infoSize}\r\n                    />\r\n                </Carousel.Item>\r\n            ));\r\n            break;\r\n        default:\r\n            elements.map(() => view.push(<Carousel.Item className={'carousel-item'}/>));\r\n            break;\r\n    }\r\n\r\n    return view;\r\n}\r\n","import React from 'react';\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport {projects} from \"../../utils/projects\";\r\nimport {renderElements} from \"../../utils/functions/renderElements\";\r\nimport \"./Projects.styles.css\";\r\n\r\nconst Projects = () => {\r\n\r\n    return (\r\n        <div id={'projects'} className={'carousel-style'}>\r\n            <p className={'header-text'}>Projects</p>\r\n            <Carousel>\r\n                {renderElements(projects, 'projects')}\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n\r\n","export const skills = [\r\n    {\r\n        id: 0,\r\n        name: 'Java',\r\n        image: '/images/languages/language-java.png',\r\n        color: '#FFA500',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'JavaScript',\r\n        image: '/images/languages/language-js.png',\r\n        color: 'yellow',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'TypeScript',\r\n        image: '/images/languages/language-ts.png',\r\n        color: 'blue',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'HTML',\r\n        image: '/images/languages/html.png',\r\n        color: '#FF4500',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'CSS',\r\n        image: '/images/languages/css.png',\r\n        color: '#87CEFA',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'SQL',\r\n        image: '/images/languages/language-sql.png',\r\n        color: '#1E90FF',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'PL/pgSQL',\r\n        image: '/images/languages/language-plpgsql.png',\r\n        color: '#6495ED',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Groovy',\r\n        image: '/images/languages/language-groovy.png',\r\n        color: '#4682B4',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Python',\r\n        image: '/images/languages/language-python.png',\r\n        color: '#1E90FF',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'C',\r\n        image: '/images/languages/language-c.png',\r\n        color: '#4169E1',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'C++',\r\n        image: '/images/languages/language-c-plus-plus.png',\r\n        color: '#6495ED',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'C#',\r\n        image: '/images/languages/language-c-sharp.png',\r\n        color: 'violet',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'R',\r\n        image: '/images/languages/language-r.png',\r\n        color: 'blue',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Haskell',\r\n        image: '/images/languages/language-haskell.png',\r\n        color: 'white',\r\n        type: 'language'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'ReactJS',\r\n        image: '/images/technologies/reactjs.png',\r\n        color: '#00BFFF',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'React Native',\r\n        image: '/images/technologies/reactnative.png',\r\n        color: '#00BFFF',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'NodeJS',\r\n        image: '/images/technologies/nodejs.png',\r\n        color: '#00FF00',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 17,\r\n        name: 'Angular',\r\n        image: '/images/technologies/angular.png',\r\n        color: 'red',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'Spring',\r\n        image: '/images/technologies/spring.png',\r\n        color: 'green',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 19,\r\n        name: 'SQLite',\r\n        image: '/images/technologies/sqlite.png',\r\n        color: 'blue',\r\n        type: 'technology',\r\n    },\r\n    {\r\n        id: 20,\r\n        name: 'Unity',\r\n        image: '/images/technologies/unity.png',\r\n        color: 'white',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 21,\r\n        name: 'HapiJS',\r\n        image: '/images/technologies/hapijs.png',\r\n        color: 'orange',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 22,\r\n        name: 'MongoDB',\r\n        image: '/images/technologies/mongodb.png',\r\n        color: '#32CD32',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 23,\r\n        name: 'mongoose',\r\n        image: '/images/technologies/mongoose.png',\r\n        color: 'red',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 24,\r\n        name: 'JWT',\r\n        image: '/images/technologies/jwt.png',\r\n        color: '#FF00FF',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 25,\r\n        name: 'Jest',\r\n        image: '/images/technologies/jest.png',\r\n        color: '#DC143C',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 26,\r\n        name: 'JUnit',\r\n        image: '/images/technologies/junit.png',\r\n        color: 'red',\r\n        type: 'technology'\r\n    },\r\n    {\r\n        id: 27,\r\n        name: 'Spock',\r\n        image: '/images/technologies/spock.png',\r\n        color: '#0000CD',\r\n        type: 'technology'\r\n    }\r\n];\r\n","const knowledge = {\r\n    frontend: {\r\n        name: 'Frontend',\r\n        color: '#00ACEE',\r\n        image: 'images/knowledge/frontend.png',\r\n        technology_stack: ['JavaScript', 'HTML', 'CSS', 'React', 'React Native', 'Java', 'NetBeans IDE', 'IntelliJ IDEA'],\r\n        text: 'I started my adventure with JavaScript in university. I learned the basics of the language, issues related to asynchronicity and functional programming. The first framework I started using that uses JavaScript was React Native (I also wrote my engineering thesis using this framework). I learned how to create my own components and design a user interface for mobile applications. I have used various libraries such as React Native Navigation, React Native Elements, React Native Paper and React Native SVG. I am familiar with the MobX data storage mechanism. Currently I am focusing on getting to know React.js (this page was also created using this framework). Getting to know this programming environment allows me to improve my HTML and CSS skills. My first contact with HTML and CSS was while studying the UI Design at the university. Then I also learned the basics of the Angular framework. I also can create applications with a graphical interface using NetBeans IDE and Java programming language. I use IntelliJ IDEA environment on a daily basis during development.'\r\n    },\r\n    backend: {\r\n        name: 'Backend',\r\n        color: '#FF8C00',\r\n        image: 'images/knowledge/backend.png',\r\n        technology_stack: ['JavaScript', 'Node.js', 'Hapi.js', 'Express.js', 'JSON Web Token', 'Java', 'Spring Framework'],\r\n        text: 'I created several projects based on client-server architecture. I can create simple API servers using Node.js. In my engineering thesis, I created an API server that allows you to search for movies, series and people from the film industry. This server contains about 100 endpoints using the most popular HTTP requests such as GET, POST, PATCH and DELETE. It was my first bigger API server. I also know the DAO, business and REST layers pattern. All queries were properly secured using the Joi library in terms of the correctness of the transmitted parameters. I also learned the methods of user authentication and authorization using JSON Web Token (JWT). I can create roles on the server that have access to specific resources. I also used the Swagger library to generate API documentation. As for Java, this was my first object-oriented language I learned. I know concepts such as, for example, object, class, inheritance, polymorphism and serialization. During my studies, I also created a few simple API servers using the Spring library.'\r\n    },\r\n    databases: {\r\n        name: 'Databases',\r\n        color: '#008000',\r\n        image: 'images/knowledge/databases.png',\r\n        technology_stack: ['SQL', 'PL/pgSQL', 'PostgreSQL', 'pgAdmin', 'MongoDB', 'mongoose', 'SQLite'],\r\n        text: 'I learned the basics of SQL in my university classes. I was working with the PostgreSQL database at the time. I learned the basics of relational databases. I learned the DML instruction set (INSERT, UPDATE, DELETE) and the DDL instruction set (CREATE, ALTER, DROP). I wrote various database queries using table joins, aggregate functions and subqueries. I also learned the basics of the PL/pgSQL programming language. I have written triggers and triggered procedures. I also got acquainted with the mechanism of transactions in databases and ACID rules. I also learned the principles of normalization of relational databases. I can also create rules and perspectives. While working with the PostgreSQL database, I used the pgAdmin utility. While creating the project as part of my engineering thesis, I got acquainted with the non-relational MongoDB database based on documents. I was using the mongoose library. While creating applications for mobile devices, I used a single-file SQLite database. I also used tools such as Toad Data Modeler for designing databases.'\r\n    },\r\n    testing: {\r\n        name: 'Testing & Code quality',\r\n        color: '#9400D3',\r\n        image: 'images/knowledge/testing.png',\r\n        technology_stack: ['JavaScript', 'Jest', 'Java', 'JUnit', 'Groovy', 'Spock', 'Git (Version Control System)'],\r\n        text: 'I got acquainted with testing in the class on \\'Testing and Software Quality\\' in my university. I wrote my first tests using JUnit and Spock. The Java applications that included the tests are on my Bitbucket. While learning testing, I also got acquainted with the principles of clean code, The Law of Demeter, SOLID, KISS and DRY. I try to make the code I create readable, clear and understandable. I also pay attention to the correct formatting of the code and dividing the code into smaller modules. I am familiar with refactoring the source code. I also learned how to use the Jest library and write simple unit tests to check the correct functioning of the functions used in the application. I also wrote integration tests that validated the server-side endpoints. When introducing new functions to the system, I always try to check their correctness with the greatest accuracy. I am also familiar with the GIT version control system. I can work in a team using the possibilities of this system. I know how to manage the repository, create new branches, commits, pull requests and more.  I use platforms such as Github, Bitbucket and Gitlab.'\r\n    }\r\n}\r\n\r\nexport default knowledge;\r\n","import React, {useState} from \"react\";\r\nimport knowledge from \"../utils/knowledge\";\r\n\r\nconst KnowledgeCard = ({type}) => {\r\n\r\n    const [item] = useState(knowledge[type]);\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            borderRadius: 25,\r\n            border: '1px solid #FFFFFF90',\r\n            background: 'transparent',\r\n            padding: 20,\r\n            width: 330,\r\n            height: 600,\r\n            margin: 20\r\n        }}>\r\n            <div style={{\r\n                flex: 2,\r\n                marginTop: -20,\r\n                marginLeft: -20,\r\n                marginRight: -20,\r\n                borderTopLeftRadius: 25,\r\n                borderTopRightRadius: 25,\r\n                backgroundColor: '#FFFFFF90',\r\n                position: 'relative'\r\n            }}>\r\n                <img alt={'technology'} src={item.image} style={{width: 90, height: 75, marginTop: 20}}/>\r\n                <p style={{\r\n                    fontFamily: 'Open Sans',\r\n                    fontWeight: 300,\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: -5,\r\n                    fontSize: 20,\r\n                    color: 'black'\r\n                }}>{item.name}</p>\r\n            </div>\r\n            <div style={{\r\n                marginLeft: -20,\r\n                marginRight: -20,\r\n                backgroundColor: item.color,\r\n            }}>\r\n                <p style={{\r\n                    margin: 'auto',\r\n                    textAlign: 'center',\r\n                    fontSize: 15,\r\n                    color: 'white',\r\n                    fontFamily: 'Open Sans',\r\n                    fontWeight: 300,\r\n                }}>\r\n                    {item.technology_stack.join(\" · \")}\r\n                </p>\r\n            </div>\r\n            <div style={{\r\n                flex: 6,\r\n                borderBottomLeftRadius: 25,\r\n                borderBottomRightRadius: 25,\r\n                marginRight: -20,\r\n                marginLeft: -20,\r\n                marginBottom: -20,\r\n                backgroundColor: 'rgba(0,0,0,0.7)'\r\n            }}>\r\n                <p style={{\r\n                    fontSize: 11,\r\n                    fontWeight: 300,\r\n                    textAlign: 'justify',\r\n                    fontFamily: 'Open Sans',\r\n                    margin: 10\r\n                }}>{item.text} {\r\n                    type === 'backend'\r\n                    && <a target={'_blank'} rel={'noreferrer'}\r\n                          href={'http://mediabrowser-server.herokuapp.com/documentation'}\r\n                          style={{fontSize: 11, color: 'orange'}}>Click here to see the docs for my API server\r\n                        built with Hapi.js\r\n                    </a>\r\n                }\r\n                </p>\r\n\r\n                {\r\n                    type === 'frontend' &&\r\n                    <div style={{\r\n                        flex: 1,\r\n                        paddingTop: 35,\r\n                        height: 30,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-evenly'\r\n                    }}>\r\n                        <img alt={'js'} style={{width: 25, height: 25}} src={'images/languages/language-js.png'}/>\r\n                        <img alt={'html'} style={{width: 25, height: 25}} src={'images/languages/html.png'}/>\r\n                        <img alt={'css'} style={{width: 25, height: 25}} src={'images/languages/css.png'}/>\r\n                        <img alt={'react'} style={{width: 25, height: 25}} src={'images/technologies/reactjs.png'}/>\r\n                        <img alt={'rn'} style={{width: 25, height: 25}} src={'images/technologies/reactnative.png'}/>\r\n                        <img alt={'java'} style={{width: 25, height: 25}} src={'images/languages/language-java.png'}/>\r\n                        <img alt={'nb'} style={{width: 25, height: 25}} src={'images/platforms/netbeans.png'}/>\r\n                        <img alt={'intellij'} style={{width: 25, height: 25}} src={'images/platforms/intellij.png'}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    type === 'backend' &&\r\n                    <div style={{\r\n                        height: 30,\r\n                        paddingTop: 35,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-evenly'\r\n                    }}>\r\n                        <img alt={'js'} style={{width: 25, height: 25}} src={'images/languages/language-js.png'}/>\r\n                        <img alt={'node'} style={{width: 25, height: 25}} src={'images/technologies/nodejs.png'}/>\r\n                        <img alt={'hapi'} style={{width: 25, height: 25}} src={'images/technologies/hapijs.png'}/>\r\n                        <img alt={'jwt'} style={{width: 25, height: 25}} src={'images/technologies/jwt.png'}/>\r\n                        <img alt={'java'} style={{width: 25, height: 25}} src={'images/languages/language-java.png'}/>\r\n                        <img alt={'spring'} style={{width: 25, height: 25}} src={'images/technologies/spring.png'}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    type === 'databases' &&\r\n                    <div style={{\r\n                        height: 30,\r\n                        paddingTop: 35,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-evenly'\r\n                    }}>\r\n                        <img alt={'sql'} style={{width: 25, height: 25}} src={'images/languages/language-sql.png'}/>\r\n                        <img alt={'postgresql'} style={{width: 25, height: 25}}\r\n                             src={'images/languages/language-plpgsql.png'}/>\r\n                        <img alt={'mongodb'} style={{width: 25, height: 25}} src={'images/technologies/mongodb.png'}/>\r\n                        <img alt={'mongoose'} style={{width: 25, height: 25}} src={'images/technologies/mongoose.png'}/>\r\n                        <img alt={'sqlite'} style={{width: 25, height: 25}} src={'images/technologies/sqlite.png'}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    type === 'testing' &&\r\n                    <div style={{\r\n                        height: 30,\r\n                        paddingTop: 35,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-evenly'\r\n                    }}>\r\n                        <img alt={'js'} style={{width: 25, height: 25}} src={'images/languages/language-js.png'}/>\r\n                        <img alt={'jest'} style={{width: 25, height: 25}} src={'images/technologies/jest.png'}/>\r\n                        <img alt={'java'} style={{width: 25, height: 25}} src={'images/languages/language-java.png'}/>\r\n                        <img alt={'junit'} style={{width: 25, height: 25}} src={'images/technologies/junit.png'}/>\r\n                        <img alt={'groovy'} style={{width: 25, height: 25}}\r\n                             src={'images/languages/language-groovy.png'}/>\r\n                        <img alt={'spock'} style={{width: 25, height: 25}} src={'images/technologies/spock.png'}/>\r\n                        <img alt={'git'} style={{width: 25, height: 25}} src={'images/technologies/git.png'}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KnowledgeCard;\r\n","import React from 'react';\r\nimport {skills} from \"../../utils/skills\";\r\nimport {renderElements} from \"../../utils/functions/renderElements\";\r\nimport KnowledgeCard from \"../../components/KnowledgeCard\";\r\nimport \"./Skills.styles.css\";\r\n\r\nconst Skills = () => {\r\n\r\n    return (\r\n        <div id={'skills'} className={'item-dashboard'} style={{backgroundColor: '#1d2026'}}>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <p className={'header-text'}>Skills</p>\r\n                <p style={{fontSize: 15, margin: 15, fontFamily: 'Open Sans'}}>I am constantly trying to gain knowledge\r\n                    and improve my programming skills.<br/>I had contact with the following <code style={{fontSize: 14}}>programming\r\n                        languages</code> and <code style={{fontSize: 14}}>IT technologies</code> while studying Computer\r\n                    Science.</p>\r\n                <div style={{width: 100, height: 1, backgroundColor: 'orange'}}/>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap', margin: 10}}>\r\n                <div style={{flex: 1, display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <p style={{marginTop: 10, fontSize: 14, fontFamily: 'Open Sans'}}>Programming languages</p>\r\n                    <div className={'skills-container'}>\r\n                        {renderElements(skills.filter(el => el.type === 'language'), 'skills')}\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{flex: 1, display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\r\n                    <p style={{marginTop: 10, fontSize: 14, fontFamily: 'Open Sans'}}>Tools and technologies</p>\r\n                    <div className={'skills-container'}>\r\n                        {renderElements(skills.filter(el => el.type === 'technology'), 'skills')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'wallpaper-container'} style={{backgroundImage: \"url(images/wallpaper3.jpg)\"}}>\r\n                <div style={{textAlign: 'center', backgroundColor: '#00000090'}}>\r\n                    <p className={'header-text-small'}>Practical knowledge</p>\r\n                    <div className={'knowledge-card-container row'}>\r\n                        <KnowledgeCard type={'frontend'}/>\r\n                        <KnowledgeCard type={'backend'}/>\r\n                        <KnowledgeCard type={'databases'}/>\r\n                        <KnowledgeCard type={'testing'}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;\r\n","export const hobby = [\r\n    {\r\n        id: 0,\r\n        name: 'Programming',\r\n        quote: 'The only way to learn a new programming language is by writing programs in it...',\r\n        text: 'From an early age, I was interested in news related to the world of computers and programming. As a young boy, I ran my own servers in online games that were very popular all over the country (in games such as Minecraft and GTA). It was the first time I encountered the Java programming language. Currently, I am interested in programming mobile and internet applications. I try to create applications with an attractive and user-friendly interface. I deepen my knowledge in the field of programming, relational and non-relational databases, operation and design of web applications, as well as application security.',\r\n        image: '/images/hobby/programming.jpg',\r\n        color: 'blue',\r\n        keywords: ['code','fix','develop']\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Esports & gaming',\r\n        quote: 'Practise until your idols become your rivals...',\r\n        text: 'I have been interested in e-sport and computer games since I was a child. E-sports games are associated with emotions, competition and the desire to constantly improve your skills. These things are not foreign to me. I competed with the best players from around the world in games such as Counter Strike, H1Z1, Apex Legends and VALORANT. E-sport has taught me the desire for continuous development, teamwork, which is a key element of every e-sport game, and drawing conclusions. During the online games, I also had the opportunity to meet many people from around the world with whom I have very good contact on a daily basis.',\r\n        image: '/images/hobby/esports.jpg',\r\n        color: 'red',\r\n        keywords: ['learn','compete','win']\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Cinematography',\r\n        quote: 'Watching movies is a chance to live many lifetimes...',\r\n        text: 'I have been interested in the world of cinema since childhood. In my opinion, watching movies is a chance to get to know many cultures and customs from around the world. Watching movies allows you to develop your imagination and the desire to get to know the world. I mainly like watching action movies, dramas and thrillers. Mind-blowing psychological thrillers are my favorites. While watching, the viewer must focus on the plot, think and try to find a solution to a specific puzzle. My favorite movies of this type are Prisoners, The Game, Inception and Split. Sometimes I also like to laugh, have fun and watch a good comedy! :-)',\r\n        image: '/images/hobby/cinematography.jpg',\r\n        color: 'yellow',\r\n        keywords: ['watch', 'discover', 'experience']\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Music',\r\n        quote: 'Music is the shorthand of emotion...',\r\n        text: 'I really like listening to music in my spare time. Sometimes I also listen while working. Music relaxes me and puts me in a good mood. I really appreciate songs that have a message in them. I don\\'t have my favorite genre of music, I listen to everything I can catch my ear (except disco polo ofc). I listen to different kinds of music depending on my mood. I have created my own playlists suitable for various occasions.',\r\n        image: '/images/hobby/music.jpg',\r\n        color: 'green',\r\n        keywords: ['listen', 'feel', 'thrill']\r\n    }\r\n]\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport WatchIcon from '@material-ui/icons/LiveTv';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: '6px 16px',\r\n        width: '55%',\r\n        backgroundColor: '#00000095',\r\n        '@media (max-width:992px)': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    secondaryTail: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n}));\r\n\r\nexport default function MyTimeline() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Timeline align=\"alternate\" style={{marginBottom: 0}}>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot>\r\n                        <FastfoodIcon/>\r\n                    </TimelineDot>\r\n                    <TimelineConnector/>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>eat</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            I need strength</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot style={{backgroundColor: 'orange'}}>\r\n                        <LaptopMacIcon/>\r\n                    </TimelineDot>\r\n                    <TimelineConnector/>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper} style={{marginLeft: 'auto'}}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>code</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            I want to develop myself</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot style={{backgroundColor: 'purple'}}>\r\n                        <SportsEsportsIcon/>\r\n                    </TimelineDot>\r\n                    <TimelineConnector/>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>play</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            I want to compete with the best</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot style={{backgroundColor: 'red'}}>\r\n                        <PeopleIcon/>\r\n                    </TimelineDot>\r\n                    <TimelineConnector/>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper} style={{marginLeft: 'auto'}}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>meet\r\n                            friends</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            I want to develop socially</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot style={{backgroundColor: 'green'}}>\r\n                        <WatchIcon/>\r\n                    </TimelineDot>\r\n                    <TimelineConnector/>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>watch movies</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            I want to know the world</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot color=\"primary\">\r\n                        <HotelIcon/>\r\n                    </TimelineDot>\r\n                    <TimelineConnector className={classes.secondaryTail} />\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper} style={{marginLeft: 'auto'}}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>sleep</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            I need a rest</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineSeparator>\r\n                    <TimelineDot color=\"secondary\">\r\n                        <RepeatIcon/>\r\n                    </TimelineDot>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Typography style={{\r\n                            color: 'gray',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14\r\n                        }}>repeat</Typography>\r\n                        <Typography style={{\r\n                            color: 'orange',\r\n                            display: 'inline',\r\n                            fontFamily: 'Open Sans',\r\n                            fontSize: 14\r\n                        }}> {'//'} </Typography>\r\n                        <Typography style={{color: 'gray', display: 'inline', fontFamily: 'Open Sans', fontSize: 14}}>because\r\n                            this is the life I love</Typography>\r\n                    </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n        </Timeline>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Carousel} from 'react-bootstrap';\r\nimport {hobby} from \"../../utils/hobby\";\r\nimport {renderElements} from \"../../utils/functions/renderElements\";\r\nimport MyTimeline from \"../../components/MyTimeline\";\r\nimport \"./Hobby.styles.css\";\r\n\r\nconst Hobby = () => {\r\n\r\n    const quote = {\r\n        text: 'The whole secret of a successful life is to find out what is one’s destiny to do, and then do it.',\r\n        author: 'Henry Ford'\r\n    };\r\n\r\n    return (\r\n        <div id={'hobby'} style={{display: 'flex', flexDirection: 'column'}}>\r\n            <div className={'carousel-style'}>\r\n                <p className={'header-text'}>Hobby</p>\r\n                <Carousel>\r\n                    {renderElements(hobby, 'hobby')}\r\n                </Carousel>\r\n            </div>\r\n            <div className={'wallpaper-container'} style={{backgroundImage: \"url(images/wallpaper2.jpg)\",}}>\r\n                <div style={{backgroundColor: '#00000090', textAlign: 'center'}}>\r\n                    <p className={'header-text-small'}>My timeline</p>\r\n                </div>\r\n                <div style={{backgroundColor: '#00000090', display: 'flex', flexDirection: 'column'}}>\r\n                    <MyTimeline/>\r\n                    <section className={'quote-component row col-sm-12 col-md-6'}>\r\n                        <blockquote className={'callout quote EN'}>{quote.text}\r\n                        <cite> – </cite>{quote.author}</blockquote>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hobby;\r\n","const contact = {\r\n    email: 'ernestbies@gmail.com',\r\n    github: 'https://github.com/ernestbies',\r\n    bitbucket: 'https://bitbucket.org/ernestbies',\r\n    discord: 'tsl#2025'\r\n};\r\n\r\nexport default contact;\r\n","import React from \"react\";\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nconst ConfirmAlert = ({showAlert, setShowAlert, variant}) => {\r\n\r\n    if (showAlert) {\r\n        return (\r\n            <Alert style={{position: 'fixed'}} className={'confirm-alert'} variant={variant}\r\n                   onClose={() => setShowAlert(false)} dismissible>\r\n                {\r\n                    variant === 'info' ?\r\n                        <div>\r\n                            <p style={{fontSize: 15, fontFamily: 'Open Sans'}}>Message sent</p>\r\n                            <p style={{fontSize: 11, fontFamily: 'Open Sans'}}>\r\n                                Your message has been sent successfully. I will reply as soon as possible!\r\n                            </p>\r\n                        </div> :\r\n                        <div>\r\n                            <p style={{fontSize: 15, fontFamily: 'Open Sans'}}>Error</p>\r\n                            <p style={{fontSize: 11, fontFamily: 'Open Sans'}}>\r\n                                There was a problem sending your message. Please try again later!\r\n                            </p>\r\n                        </div>\r\n                }\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    return (<div/>);\r\n}\r\n\r\nexport default ConfirmAlert;\r\n","import React, {useState} from \"react\";\r\nimport {CgMail, RiMessage3Line} from \"react-icons/all\";\r\nimport ConfirmAlert from \"./ConfirmAlert\";\r\nimport ReCAPTCHA from \"react-google-recaptcha/lib/esm/recaptcha-wrapper\";\r\n\r\nconst ContactForm = () => {\r\n\r\n    const recaptchaRef = React.createRef();\r\n    const [email, setEmail] = useState('');\r\n    const [topic, setTopic] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertVariant, setAlertVariant] = useState('info');\r\n    const [recaptcha, setRecaptchaValue] = useState('');\r\n\r\n    const confirmDm = () => {\r\n        const data = {email, topic, text, recaptcha};\r\n        sendData(data).then((res) => {\r\n            if (res.ok) {\r\n                setAlertVariant('info');\r\n            } else {\r\n                setAlertVariant('danger');\r\n            }\r\n            setShowAlert(true);\r\n        }).catch(() => {\r\n            setAlertVariant('danger');\r\n            setShowAlert(true);\r\n        });\r\n\r\n        recaptchaRef.current.reset();\r\n        setRecaptchaValue('');\r\n        clearData();\r\n    }\r\n\r\n    const sendData = (data) => {\r\n        return fetch(`http://localhost:4200/api/contact`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n    const isEmptyOrSpaces = (str) => str === null || str.match(/^ *$/) !== null;\r\n\r\n    const clearData = () => {\r\n        setEmail('');\r\n        setTopic('');\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <form id={'dm'} style={{\r\n            maxWidth: 700, width: '95%', backgroundColor: 'red', margin: 10, borderRadius: 25,\r\n            border: '1px solid #FFFFFF90', background: '#00000090',\r\n        }}>\r\n            <div style={{display: 'flex', marginLeft: 30, marginTop: 50, alignItems: 'center'}}>\r\n                <input value={email} className={'input-field'} style={{order: 1, width: '50%'}} type={'email'}\r\n                       placeholder={'E-mail address'} onChange={(event) => setEmail(event.target.value)}\r\n                       required={true}/>\r\n                <CgMail className={'input-icon'} size={30}/>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', marginLeft: 30, marginTop: 30, alignItems: 'center'}}>\r\n                <input value={topic} style={{order: 1, width: '70%'}} className={'input-field'} type={'text'}\r\n                       placeholder={'Topic'} pattern=\"\\s*(\\S\\s*){1,}\"\r\n                       onChange={(event) => setTopic(event.target.value)} required={true}/>\r\n                <RiMessage3Line className={'input-icon'} size={30}/>\r\n            </div>\r\n\r\n            <textarea value={text} className={'contact-textarea'} placeholder={'Type here...'}\r\n                      onChange={(event) => setText(event.target.value)} required={true}/>\r\n\r\n            <div style={{display: 'flex', marginTop: 30, justifyContent: 'center', alignItems: 'center'}}>\r\n                <ReCAPTCHA ref={recaptchaRef}  theme={'dark'} onChange={(value) => setRecaptchaValue(value)}\r\n                           sitekey={process.env.RECAPTCHA_SITE_KEY} hl={'en-GB'}/>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', justifyContent: 'center', marginBottom: 20, alignItems: 'center'}}>\r\n                <button disabled={!email || isEmptyOrSpaces(topic) || !text || !recaptcha} form={'dm'} onClick={() => confirmDm()}\r\n                        type={'button'}\r\n                        className={'confirm-btn'}>Send\r\n                </button>\r\n            </div>\r\n\r\n            <ConfirmAlert showAlert={showAlert} setShowAlert={setShowAlert} variant={alertVariant}/>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport {FaGithub, FaBitbucket, FaDiscord} from 'react-icons/fa';\r\nimport {CgMail} from \"react-icons/cg\";\r\nimport contact from \"../../utils/contact\";\r\nimport \"./Contact.styles.css\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\n\r\nconst Contact = () => {\r\n\r\n    const copyName = () => {\r\n        let input = document.createElement('input');\r\n        document.body.appendChild(input);\r\n        input.value = contact.discord;\r\n        input.select();\r\n        document.execCommand('copy', false);\r\n        input.remove();\r\n\r\n        let tooltipText = document.getElementById('discordName');\r\n        tooltipText.innerHTML = '<p style=\"color: orange; display: inline;\">' + contact.discord + '</p> has been copied to clipboard!';\r\n    };\r\n\r\n    const outCopyName = () => {\r\n        let tooltipText = document.getElementById('discordName');\r\n        tooltipText.innerHTML = '<p>Click here to copy the username</p>';\r\n    }\r\n\r\n    return (\r\n        <div id={'contact'} style={{display: 'flex', flexDirection: 'column'}}>\r\n            <div className={'contact-list'}>\r\n                <p className={'header-text'}>Contact with me</p>\r\n                <div className={'contact-icons'}>\r\n                    <div className={'icon-item'}>\r\n                        <a color={'white'} target={'_blank'} rel={'noreferrer'} style={{outline: 'none'}}\r\n                           href={contact.github}>\r\n                            <FaGithub type={'github'} className={'icon'}/></a>\r\n                    </div>\r\n                    <div className={'icon-item'}>\r\n                        <a color={'white'} target={'_blank'} rel={'noreferrer'} style={{outline: 'none'}}\r\n                           href={contact.bitbucket}>\r\n                            <FaBitbucket type={'bitbucket'} className={'icon'}/></a>\r\n                    </div>\r\n                    <div className={'icon-item'}>\r\n                        <a color={'white'} target={'_blank'} rel={'noreferrer'} style={{outline: 'none'}}\r\n                           href={'mailto:' + contact.email}>\r\n                            <CgMail type={'email'} className={'icon'}/></a>\r\n                    </div>\r\n                    <div className={'icon-item'}>\r\n                        <div className={'tooltipClass'}>\r\n                            <button id={'discordIcon'} onClick={() => copyName()} onMouseOut={() => outCopyName()}\r\n                                    color={'white'}\r\n                                    style={{backgroundColor: 'transparent', borderWidth: 0, cursor: 'pointer'}}>\r\n                                <span id={'discordName'}\r\n                                      className={'tooltipText'}>Click here to copy the username</span>\r\n                                <FaDiscord type={'discord'} className={'icon'}/></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={'wallpaper-container'} style={{backgroundImage: \"url(images/wallpaper4.jpg)\"}}>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    backgroundColor: '#00000099',\r\n                    textAlign: 'center',\r\n                    height: 750\r\n                }}>\r\n                    <p className={'header-text-small'}>DM</p>\r\n                    <ContactForm/>\r\n                    <span style={{\r\n                        color: 'white',\r\n                        marginTop: 40,\r\n                        display: 'inline-block',\r\n                        fontFamily: 'Press Start',\r\n                        fontSize: 11\r\n                    }}><span style={{color: '#9932CC', fontWeight: 'bold'}}>{'//'}</span> thanks for visit, hope u <span\r\n                        style={{color: '#9932CC'}}>enjoy</span></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import Navbar from \"./parts/navbar/Navbar\";\r\nimport './App.css';\r\nimport React from \"react\";\r\nimport Footer from \"./parts/footer/Footer\";\r\nimport About from \"./pages/about/About\";\r\nimport Projects from \"./pages/projects/Projects\";\r\nimport Skills from \"./pages/skills/Skills\";\r\nimport Hobby from \"./pages/hobby/Hobby\";\r\nimport Contact from \"./pages/contact/Contact\";\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <Router>\r\n          <div className={'App'}>\r\n              <Navbar/>\r\n              <div className={'page'}>\r\n                  <About/>\r\n                  <Projects/>\r\n                  <Skills/>\r\n                  <Hobby/>\r\n                  <Contact/>\r\n                  <Footer/>\r\n              </div>\r\n          </div>\r\n          <Redirect from=\"/*\" to=\"/\"/>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}